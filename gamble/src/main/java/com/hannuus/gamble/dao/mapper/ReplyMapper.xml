<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hannuus.gamble.dao.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.hannuus.gamble.bean.Reply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="topic_id" property="topicId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="modified_on" property="modifiedOn" jdbcType="TIMESTAMP" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hannuus.gamble.bean.Reply" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, topic_id, title, user_id, modified_on, created_on, parent_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hannuus.gamble.bean.ReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbs_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hannuus.gamble.bean.ReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbs_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbs_reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bbs_reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hannuus.gamble.bean.ReplyExample" >
    delete from bbs_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hannuus.gamble.bean.Reply" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbs_reply (topic_id, title, user_id, 
      modified_on, created_on, parent_id, 
      content)
    values (#{topicId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{modifiedOn,jdbcType=TIMESTAMP}, #{createdOn,jdbcType=TIMESTAMP}, #{parentId,jdbcType=BIGINT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hannuus.gamble.bean.Reply" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbs_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="topicId != null" >
        topic_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="modifiedOn != null" >
        modified_on,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="topicId != null" >
        #{topicId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="modifiedOn != null" >
        #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hannuus.gamble.bean.ReplyExample" resultType="java.lang.Integer" >
    select count(*) from bbs_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bbs_reply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.topicId != null" >
        topic_id = #{record.topicId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedOn != null" >
        modified_on = #{record.modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdOn != null" >
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update bbs_reply
    set id = #{record.id,jdbcType=BIGINT},
      topic_id = #{record.topicId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      modified_on = #{record.modifiedOn,jdbcType=TIMESTAMP},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bbs_reply
    set id = #{record.id,jdbcType=BIGINT},
      topic_id = #{record.topicId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      modified_on = #{record.modifiedOn,jdbcType=TIMESTAMP},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      parent_id = #{record.parentId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hannuus.gamble.bean.Reply" >
    update bbs_reply
    <set >
      <if test="topicId != null" >
        topic_id = #{topicId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="modifiedOn != null" >
        modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hannuus.gamble.bean.Reply" >
    update bbs_reply
    set topic_id = #{topicId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      parent_id = #{parentId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hannuus.gamble.bean.Reply" >
    update bbs_reply
    set topic_id = #{topicId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      parent_id = #{parentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>