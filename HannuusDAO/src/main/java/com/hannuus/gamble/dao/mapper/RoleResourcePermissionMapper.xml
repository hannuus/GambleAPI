<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hannuus.gamble.dao.RoleResourcePermissionMapper">
	<resultMap id="BaseResultMap"
		type="com.hannuus.gamble.model.RoleResourcePermission">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="role_id" property="roleId" jdbcType="BIGINT" />
		<result column="resource_id" property="resourceId" jdbcType="BIGINT" />
		<result column="permission_ids" property="permissionIds"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, role_id, resource_id, permission_ids
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.hannuus.gamble.model.RoleResourcePermissionExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from role_resource_permission
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limitStart != null and limitStart>=0">
			limit #{limitStart} , #{limitEnd}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from role_resource_permission
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from role_resource_permission
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.hannuus.gamble.model.RoleResourcePermissionExample">
		delete from role_resource_permission
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hannuus.gamble.model.RoleResourcePermission">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into role_resource_permission (role_id, resource_id,
		permission_ids
		)
		values (#{roleId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT},
		#{permissionIds,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.hannuus.gamble.model.RoleResourcePermission">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into role_resource_permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="resourceId != null">
				resource_id,
			</if>
			<if test="permissionIds != null">
				permission_ids,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=BIGINT},
			</if>
			<if test="resourceId != null">
				#{resourceId,jdbcType=BIGINT},
			</if>
			<if test="permissionIds != null">
				#{permissionIds,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.hannuus.gamble.model.RoleResourcePermissionExample"
		resultType="java.lang.Integer">
		select count(*) from role_resource_permission
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update role_resource_permission
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=BIGINT},
			</if>
			<if test="record.resourceId != null">
				resource_id = #{record.resourceId,jdbcType=BIGINT},
			</if>
			<if test="record.permissionIds != null">
				permission_ids = #{record.permissionIds,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update role_resource_permission
		set id = #{record.id,jdbcType=BIGINT},
		role_id = #{record.roleId,jdbcType=BIGINT},
		resource_id = #{record.resourceId,jdbcType=BIGINT},
		permission_ids = #{record.permissionIds,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hannuus.gamble.model.RoleResourcePermission">
		update role_resource_permission
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=BIGINT},
			</if>
			<if test="resourceId != null">
				resource_id = #{resourceId,jdbcType=BIGINT},
			</if>
			<if test="permissionIds != null">
				permission_ids = #{permissionIds,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hannuus.gamble.model.RoleResourcePermission">
		update role_resource_permission
		set role_id = #{roleId,jdbcType=BIGINT},
		resource_id = #{resourceId,jdbcType=BIGINT},
		permission_ids = #{permissionIds,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="findResourcePermissionsByUserName" parameterType="string"
		resultMap="BaseResultMap">
		select rrp.* from role_resource_permission rrp,user
		u,user_role ur where u.user_name=#{userName} and u.id=ur.user_id and
		ur.role_id=rrp.role_id
	</select>

	<select id="findRBACResources" parameterType="java.lang.Long"
		resultMap="com.hannuus.gamble.dao.ResourceMapper.BaseResultMap">
		select r.* from resource r,role_resource_permission rrp
		where rrp.role_id=#{roleId} and rrp.resource_id=r.id
	</select>
</mapper>