<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hannuus.gamble.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hannuus.model.gamble.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="head_url" property="headUrl" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="topic_count" property="topicCount" jdbcType="INTEGER" />
    <result column="reply_count" property="replyCount" jdbcType="INTEGER" />
    <result column="best_topic_count" property="bestTopicCount" jdbcType="INTEGER" />
    <result column="last_topic_id" property="lastTopicId" jdbcType="BIGINT" />
    <result column="last_reply_id" property="lastReplyId" jdbcType="BIGINT" />
    <result column="amount" property="amount" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
    <result column="fans_count" property="fansCount" jdbcType="INTEGER" />
    <result column="follow_count" property="followCount" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_name, nick_name, password, email, head_url, introduction, signature, topic_count, 
    reply_count, best_topic_count, last_topic_id, last_reply_id, amount, state, created_on, 
    fans_count, follow_count, mobile
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hannuus.model.gamble.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbs_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bbs_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bbs_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hannuus.model.gamble.UserExample" >
    delete from bbs_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hannuus.model.gamble.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbs_user (user_name, nick_name, password, 
      email, head_url, introduction, 
      signature, topic_count, reply_count, 
      best_topic_count, last_topic_id, last_reply_id, 
      amount, state, created_on, 
      fans_count, follow_count, mobile
      )
    values (#{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{headUrl,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{signature,jdbcType=VARCHAR}, #{topicCount,jdbcType=INTEGER}, #{replyCount,jdbcType=INTEGER}, 
      #{bestTopicCount,jdbcType=INTEGER}, #{lastTopicId,jdbcType=BIGINT}, #{lastReplyId,jdbcType=BIGINT}, 
      #{amount,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{createdOn,jdbcType=TIMESTAMP}, 
      #{fansCount,jdbcType=INTEGER}, #{followCount,jdbcType=INTEGER}, #{mobile,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hannuus.model.gamble.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbs_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        user_name,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="headUrl != null" >
        head_url,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="topicCount != null" >
        topic_count,
      </if>
      <if test="replyCount != null" >
        reply_count,
      </if>
      <if test="bestTopicCount != null" >
        best_topic_count,
      </if>
      <if test="lastTopicId != null" >
        last_topic_id,
      </if>
      <if test="lastReplyId != null" >
        last_reply_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
      <if test="fansCount != null" >
        fans_count,
      </if>
      <if test="followCount != null" >
        follow_count,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="headUrl != null" >
        #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="topicCount != null" >
        #{topicCount,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null" >
        #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="bestTopicCount != null" >
        #{bestTopicCount,jdbcType=INTEGER},
      </if>
      <if test="lastTopicId != null" >
        #{lastTopicId,jdbcType=BIGINT},
      </if>
      <if test="lastReplyId != null" >
        #{lastReplyId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="fansCount != null" >
        #{fansCount,jdbcType=INTEGER},
      </if>
      <if test="followCount != null" >
        #{followCount,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hannuus.model.gamble.UserExample" resultType="java.lang.Integer" >
    select count(*) from bbs_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bbs_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.headUrl != null" >
        head_url = #{record.headUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null" >
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.topicCount != null" >
        topic_count = #{record.topicCount,jdbcType=INTEGER},
      </if>
      <if test="record.replyCount != null" >
        reply_count = #{record.replyCount,jdbcType=INTEGER},
      </if>
      <if test="record.bestTopicCount != null" >
        best_topic_count = #{record.bestTopicCount,jdbcType=INTEGER},
      </if>
      <if test="record.lastTopicId != null" >
        last_topic_id = #{record.lastTopicId,jdbcType=BIGINT},
      </if>
      <if test="record.lastReplyId != null" >
        last_reply_id = #{record.lastReplyId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createdOn != null" >
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fansCount != null" >
        fans_count = #{record.fansCount,jdbcType=INTEGER},
      </if>
      <if test="record.followCount != null" >
        follow_count = #{record.followCount,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bbs_user
    set id = #{record.id,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      head_url = #{record.headUrl,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      topic_count = #{record.topicCount,jdbcType=INTEGER},
      reply_count = #{record.replyCount,jdbcType=INTEGER},
      best_topic_count = #{record.bestTopicCount,jdbcType=INTEGER},
      last_topic_id = #{record.lastTopicId,jdbcType=BIGINT},
      last_reply_id = #{record.lastReplyId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      fans_count = #{record.fansCount,jdbcType=INTEGER},
      follow_count = #{record.followCount,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hannuus.model.gamble.User" >
    update bbs_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="headUrl != null" >
        head_url = #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="topicCount != null" >
        topic_count = #{topicCount,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null" >
        reply_count = #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="bestTopicCount != null" >
        best_topic_count = #{bestTopicCount,jdbcType=INTEGER},
      </if>
      <if test="lastTopicId != null" >
        last_topic_id = #{lastTopicId,jdbcType=BIGINT},
      </if>
      <if test="lastReplyId != null" >
        last_reply_id = #{lastReplyId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="fansCount != null" >
        fans_count = #{fansCount,jdbcType=INTEGER},
      </if>
      <if test="followCount != null" >
        follow_count = #{followCount,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hannuus.model.gamble.User" >
    update bbs_user
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      head_url = #{headUrl,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      topic_count = #{topicCount,jdbcType=INTEGER},
      reply_count = #{replyCount,jdbcType=INTEGER},
      best_topic_count = #{bestTopicCount,jdbcType=INTEGER},
      last_topic_id = #{lastTopicId,jdbcType=BIGINT},
      last_reply_id = #{lastReplyId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      fans_count = #{fansCount,jdbcType=INTEGER},
      follow_count = #{followCount,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>